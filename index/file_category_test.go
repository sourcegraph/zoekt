package index

import (
	"testing"
)

func TestDetermineFileCategory(t *testing.T) {
	tests := []struct {
		name     string
		filename string
		content  []byte
		want     FileCategory
	}{
		{
			name:     "test file",
			filename: "foo_test.go",
			content:  []byte("package foo"),
			want:     FileCategoryTest,
		},
		{
			name:     "vendor file",
			filename: "vendor/foo.go",
			content:  []byte("package foo"),
			want:     FileCategoryVendored,
		},
		{
			name:     "generated file",
			filename: "foo.go",
			content: []byte("// Code generated by protoc-gen-go. DO NOT EDIT.\n" +
				"... some generated code ..."),
			want: FileCategoryGenerated,
		},
		{
			name:     "config file",
			filename: "package.json",
			content:  []byte("{}"),
			want:     FileCategoryConfig,
		},
		{
			name:     "dot file",
			filename: ".gitignore",
			content:  []byte("*.o"),
			want:     FileCategoryDotFile,
		},
		{
			name:     "documentation file",
			filename: "README.md",
			content:  []byte("# Documentation"),
			want:     FileCategoryDocumentation,
		},
		{
			name:     "default file",
			filename: "main.go",
			content:  []byte("package main"),
			want:     FileCategoryDefault,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			doc := &Document{
				Name:    tt.filename,
				Content: tt.content,
			}

			DetermineFileCategory(doc)
			if doc.Category != tt.want {
				t.Errorf("DetermineFileCategory() = %v, want %v", doc.Name, tt.want)
			}
		})
	}
}
