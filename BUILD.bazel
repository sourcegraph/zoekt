load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

# gazelle:prefix github.com/sourcegraph/zoekt
# gazelle:build_file_name BUILD.bazel
load("@bazel_gazelle//:def.bzl", "gazelle")

gazelle(name = "gazelle")

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
        "-build_file_proto_mode=disable_global",
    ],
    command = "update-repos",
)

go_library(
    name = "zoekt",
    srcs = [
        "api.go",
        "api_proto.go",
        "bits.go",
        "btree.go",
        "contentprovider.go",
        "eval.go",
        "hititer.go",
        "indexbuilder.go",
        "indexdata.go",
        "indexfile.go",
        "marshal.go",
        "matchiter.go",
        "matchtree.go",
        "merge.go",
        "ngramoffset.go",
        "read.go",
        "section.go",
        "toc.go",
        "tombstones.go",
        "tombstones_unix.go",
        "tombstones_windows.go",
        "write.go",
    ],
    importpath = "github.com/sourcegraph/zoekt",
    visibility = ["//visibility:public"],
    deps = [
        "//grpc/v1:grpc",
        "//query",
        "@com_github_edsrzf_mmap_go//:mmap-go",
        "@com_github_go_enry_go_enry_v2//:go-enry",
        "@com_github_go_enry_go_enry_v2//data",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_rs_xid//:xid",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_exp//slices",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:js": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "zoekt_test",
    srcs = [
        "api_proto_test.go",
        "api_test.go",
        "bits_test.go",
        "btree_test.go",
        "contentprovider_test.go",
        "eval_test.go",
        "hititer_test.go",
        "index_test.go",
        "marshal_test.go",
        "matchtree_test.go",
        "merge_test.go",
        "ngramoffset_test.go",
        "read_test.go",
        "tombstones_test.go",
    ],
    data = ["//testdata"],
    embed = [":zoekt"],
    embedsrcs = ["//testdata:testdata"],  #keep
    deps = [
        "//grpc/v1:grpc",
        "//query",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_roaringbitmap_roaring//:roaring",
        "@org_golang_google_protobuf//proto",
    ],
)
