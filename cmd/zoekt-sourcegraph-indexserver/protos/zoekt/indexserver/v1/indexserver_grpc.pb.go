// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: indexserver.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SourcegraphIndexserverService_DeleteAllData_FullMethodName = "/zoekt.indexserver.v1.SourcegraphIndexserverService/DeleteAllData"
)

// SourcegraphIndexserverServiceClient is the client API for SourcegraphIndexserverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SourcegraphIndexserverServiceClient interface {
	// DeleteAllData deletes all data for the tenant in the request context.
	// This is used for pruning all data after a tenant has been deleted.
	DeleteAllData(ctx context.Context, in *DeleteAllDataRequest, opts ...grpc.CallOption) (*DeleteAllDataResponse, error)
}

type sourcegraphIndexserverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSourcegraphIndexserverServiceClient(cc grpc.ClientConnInterface) SourcegraphIndexserverServiceClient {
	return &sourcegraphIndexserverServiceClient{cc}
}

func (c *sourcegraphIndexserverServiceClient) DeleteAllData(ctx context.Context, in *DeleteAllDataRequest, opts ...grpc.CallOption) (*DeleteAllDataResponse, error) {
	out := new(DeleteAllDataResponse)
	err := c.cc.Invoke(ctx, SourcegraphIndexserverService_DeleteAllData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SourcegraphIndexserverServiceServer is the server API for SourcegraphIndexserverService service.
// All implementations must embed UnimplementedSourcegraphIndexserverServiceServer
// for forward compatibility
type SourcegraphIndexserverServiceServer interface {
	// DeleteAllData deletes all data for the tenant in the request context.
	// This is used for pruning all data after a tenant has been deleted.
	DeleteAllData(context.Context, *DeleteAllDataRequest) (*DeleteAllDataResponse, error)
	mustEmbedUnimplementedSourcegraphIndexserverServiceServer()
}

// UnimplementedSourcegraphIndexserverServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSourcegraphIndexserverServiceServer struct {
}

func (UnimplementedSourcegraphIndexserverServiceServer) DeleteAllData(context.Context, *DeleteAllDataRequest) (*DeleteAllDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllData not implemented")
}
func (UnimplementedSourcegraphIndexserverServiceServer) mustEmbedUnimplementedSourcegraphIndexserverServiceServer() {
}

// UnsafeSourcegraphIndexserverServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SourcegraphIndexserverServiceServer will
// result in compilation errors.
type UnsafeSourcegraphIndexserverServiceServer interface {
	mustEmbedUnimplementedSourcegraphIndexserverServiceServer()
}

func RegisterSourcegraphIndexserverServiceServer(s grpc.ServiceRegistrar, srv SourcegraphIndexserverServiceServer) {
	s.RegisterService(&SourcegraphIndexserverService_ServiceDesc, srv)
}

func _SourcegraphIndexserverService_DeleteAllData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourcegraphIndexserverServiceServer).DeleteAllData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SourcegraphIndexserverService_DeleteAllData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourcegraphIndexserverServiceServer).DeleteAllData(ctx, req.(*DeleteAllDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SourcegraphIndexserverService_ServiceDesc is the grpc.ServiceDesc for SourcegraphIndexserverService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SourcegraphIndexserverService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "zoekt.indexserver.v1.SourcegraphIndexserverService",
	HandlerType: (*SourcegraphIndexserverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteAllData",
			Handler:    _SourcegraphIndexserverService_DeleteAllData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "indexserver.proto",
}
